buildscript {
    ext {
        springBootVersion = '1.3.0.RELEASE'
    }
    repositories {
    	flatDir { dirs "webapp/WEB-INF/lib" }
        maven {
        url "http://192.168.10.15:8081/nexus/content/groups/public"
    	}
    	jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
       classpath 'org.hidetake:gradle-ssh-plugin:1.1.4'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'spring-boot'
apply plugin: 'ssh'




sourceSets {
    def targetServer = project.hasProperty('target') ? project.getProperty('target') : 'local'
    println "targetServer: $targetServer"
    if( "$targetServer" != "local" ){
        copy {
            from("src/main/config/$targetServer"){
                exclude 'db.properties'
            }
            into "src/main/resources"
        }
        copy {
            from("src/main/config/$targetServer"){
                include 'db.properties'
            }
            into("src/main/resources/")
        }
    }
}

jar {
    baseName = 'demo'
    version = '0.0.1-SNAPSHOT'
}


war {
    archiveName = 'rest2.war'
    from 'resources'
    exclude('config/*.*')

}


remotes {
    testserver {
        host = '192.168.30.11'
        user = 'ksecret'
        password = 'ksecret'
    }
}

task deploy << {
  ssh.run {
    session(remotes.testserver) {
      put from: (war.archivePath.absolutePath) , into: '/home/ksecret/'
      execute 'mkdir /home/ksecret/test'
    }
  }
}



sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
	flatDir { dirs "webapp/WEB-INF/lib" }
    maven {
        url "http://192.168.10.15:8081/nexus/content/groups/public"
    	}
}

ext['tomcat.version'] = '7.0.59'
dependencies {
	compile fileTree(dir: 'src/main/webapp/WEB-INF/lib', include: ['*.jar'])
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('commons-io:commons-io:2.4')
    compile('com.konai.kccs:snmp4j:2.3.0')
    compile('commons-cli:commons-cli:1.3.1')


    testCompile('org.springframework.boot:spring-boot-starter-test')
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}

