buildscript {
    ext {
        springBootVersion = '1.3.0.RELEASE'
        profile='biz01'
    }
    repositories {
    	flatDir { dirs "webapp/WEB-INF/lib" }
        maven {
        url "http://192.168.10.15:8081/nexus/content/groups/public"
    	}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.hidetake:gradle-ssh-plugin:1.1.4'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'spring-boot'
apply plugin: 'ssh'

sourceSets {
    def targetServer = project.hasProperty('target') ? project.getProperty('target') : 'local'
    println "targetServer: $targetServer"

    //Run --> Program Aug : -Ptarget=biz01
    //이렇게 설정하면 Maven의 프로파일처럼 사용할 수 있음
    //아래처럼 if문을 이용하여 돌리면됨

    if( "$targetServer" != "local" ){
    	println "copy!!!!!!!!!!!!"
    	 main {
            resources {
                srcDir "src/main/config/$targetServer"
            }
        }
    }
}

jar {
    baseName = 'demo'
    version = '0.0.1-SNAPSHOT'
}


war {
    archiveName = 'rest2.war'
}


remotes {
    biz01 {
        host = '192.168.30.11'
        user = 'ksecret'
        password = 'ksecret'
    }
    biz02 {
        host = '192.168.30.12'
        user = 'ksecret'
        password = 'ksecret'
    }
}

task deploy << {

	def targetServer = project.hasProperty('target') ? project.getProperty('target') : 'local'
    println "Deploy targetServer: $targetServer"
	if( "$targetServer" == "biz01" ){
	    ssh.run {
	   	  session(remotes.biz01) {
		      execute 'mkdir /home/ksecret/test'
		      put from: (war.archivePath.absolutePath) , into: '/home/ksecret/test'
	    	}
	    }
    }
	if( "$targetServer" == "biz02" ){
	    ssh.run {
	   	  session(remotes.biz02) {
		      execute 'mkdir /home/ksecret/test'
		      put from: (war.archivePath.absolutePath) , into: '/home/ksecret/test'
	    	}
	    }
 	 }
}



sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
	flatDir { dirs "webapp/WEB-INF/lib" }
    maven {
        url "http://192.168.10.15:8081/nexus/content/groups/public"
    	}
}

ext['tomcat.version'] = '7.0.59'
dependencies {
	compile fileTree(dir: 'src/main/webapp/WEB-INF/lib', include: ['*.jar'])
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('commons-io:commons-io:2.3')
    compile('com.konai.kccs:snmp4j:2.3.0')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}

